# Default values for fritz-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Use this to specify your config file. You can just put the YAMl for the config here.
config: {}
# exporter_port: 9787 # optional
# log_level: DEBUG # optional
# devices:
#   - name: Fritz!Box 7590 Router # optional
#     hostname: fritz.box
#     username: prometheus
#     password: prometheus
#     host_info: True
#   - name: Repeater Wohnzimmer # optional
#     hostname: repeater-Wohnzimmer
#     username: prometheus
#     password: prometheus

replicaCount: 1

image:
  repository: pdreker/fritz_exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceMonitor:
  enabled: true
  namespace: ""
  interval: 60s
  scrapeTimeout: 30s
  relabelings: ""
  metricRelabelings: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534

service:
  type: ClusterIP
  port: 9787
  portName: metrics

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
