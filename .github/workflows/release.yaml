on:
  push:
    branches:
      - main

name: release-please
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.releases_created }}
      release_major: ${{ steps.release.outputs.major }}
      release_minor: ${{ steps.release.outputs.minor }}
      release_patch: ${{ steps.release.outputs.patch }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.MASTER_PUSH_TOKEN }}
          release-type: python
          package-name: demo_app

  build-release:
    needs: release
    if: needs.release.outputs.release_created
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Environment Variables
        uses: ./.github/actions/setenv
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: build Python wheels
        run: poetry build
      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY_HOST }}
          username: ${{ env.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_HUB }}

      - name: generate docker tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKER_REGISTRY_HOST }}/${{ env.DOCKER_REGISTRY_REPO }}/${{ env.DOCKER_REGISTRY_IMAGE }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }}.${{ needs.release.outputs.patch }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }}.${{ needs.release.outputs.patch }}
            type=semver,pattern={{major}},value=${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }}.${{ needs.release.outputs.patch }}
      # Build Docker Images (amd64 and arm64)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          platforms: linux/arm/v6,linux/arm/v7,linux/amd64,linux/aarch64
          tags: ${{ steps.meta.outputs.tags }}
